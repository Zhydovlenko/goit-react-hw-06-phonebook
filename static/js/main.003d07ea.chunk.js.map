{"version":3,"sources":["components/Toggler/Toggler.module.css","components/ContactListItem/ContactListItem.module.css","components/ContactList/ContactList.module.css","redux/contacts/contactsActions.js","redux/contacts/contactsReducer.js","redux/theme/themeActions.js","redux/theme/themeReducer.js","redux/store.js","utils/generateId.js","components/ContactForm/ContactForm.js","components/ContactListItem/ContactListItem.js","components/ContactList/ContactList.js","components/Filter/Filter.js","context/ThemeContext.js","components/Layout/Layout.js","components/Toggler/Toggler.js","App.js","index.js","components/ContactForm/ContactForm.module.css"],"names":["module","exports","addContact","createAction","name","number","payload","contact","id","shortid","generate","deleteContact","changeFilter","contacts","createReducer","contactsActions","state","action","filter","combineReducers","toggleTheme","theme","isChecked","themeConfig","themeActions","store","configureStore","reducer","contactsReducer","themeReducer","nameInputId","numberInputId","ContactForm","handleChange","target","value","setState","handleSubmit","e","preventDefault","props","some","toast","configure","error","onAddContact","reset","this","generateId","onSubmit","className","styles","form","formLabel","htmlFor","formInput","type","onChange","disabled","length","Component","mapDispatchToProps","connect","ContactListItem","onDeleteContact","item","btn","onClick","toLowerCase","includes","list","map","key","onChangeFilter","fontColor","bodyBg","React","createContext","children","style","background","color","Toggler","themeSelector","label","switch","checked","slider","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.003d07ea.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"themeSelector\":\"Toggler_themeSelector__7mjqT\",\"label\":\"Toggler_label__34-gw\",\"switch\":\"Toggler_switch__1WsQq\",\"slider\":\"Toggler_slider__2O3Mp\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"ContactListItem_item__znsD7\",\"btn\":\"ContactListItem_btn__3R2zT\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"list\":\"ContactList_list__eIu16\"};","import { createAction } from '@reduxjs/toolkit';\r\nimport shortid from 'shortid';\r\n\r\nconst addContact = createAction('contacts/add', (name, number) => ({\r\n  payload: {\r\n    contact: {\r\n      name,\r\n      number,\r\n      id: shortid.generate(),\r\n    },\r\n  },\r\n}));\r\n\r\nconst deleteContact = createAction('contacts/delete');\r\nconst changeFilter = createAction('contacts/filter');\r\n\r\nexport default {\r\n  addContact,\r\n  deleteContact,\r\n  changeFilter,\r\n};\r\n","import { combineReducers } from 'redux';\r\nimport { createReducer } from '@reduxjs/toolkit';\r\nimport contactsActions from './contactsActions';\r\n\r\nconst addContact = (state, action) => {\r\n  return [...state, action.payload.contact];\r\n};\r\n\r\nconst deleteContact = (state, action) => {\r\n  return state.filter(contact => contact.id !== action.payload);\r\n};\r\n\r\nconst contacts = createReducer([], {\r\n  [contactsActions.addContact]: addContact,\r\n  [contactsActions.deleteContact]: deleteContact,\r\n});\r\n\r\nconst filter = createReducer('', {\r\n  [contactsActions.changeFilter]: (state, action) => action.payload,\r\n});\r\n\r\nexport default combineReducers({\r\n  contacts,\r\n  filter,\r\n});\r\n","import { createAction } from '@reduxjs/toolkit';\r\n\r\nconst toggleTheme = createAction('theme/toggleTheme', (theme, isChecked) => ({\r\n  payload: {\r\n    theme: {\r\n      isChecked: false,\r\n      themeConfig: 'light',\r\n    },\r\n  },\r\n}));\r\n\r\nexport default {\r\n  toggleTheme,\r\n};\r\n","import { createReducer, combineReducers } from '@reduxjs/toolkit';\r\n\r\nimport themeActions from './themeActions';\r\n\r\nconst toggleTheme = state => {\r\n  return {\r\n    ...state,\r\n    themeConfig: state.themeConfig === 'light' ? 'dark' : 'light',\r\n  };\r\n};\r\n\r\nconst toggleChecked = state => {\r\n  return {\r\n    ...state,\r\n    isChecked: !state.isChecked,\r\n  };\r\n};\r\n\r\nconst themeConfig = createReducer(\r\n  { themeConfig: 'light' },\r\n  {\r\n    [themeActions.toggleTheme]: toggleTheme,\r\n  },\r\n);\r\n\r\nconst isChecked = createReducer(\r\n  { isChecked: false },\r\n  {\r\n    [themeActions.toggleTheme]: toggleChecked,\r\n  },\r\n);\r\n\r\nexport default combineReducers({\r\n  themeConfig,\r\n  isChecked,\r\n});\r\n","import { configureStore } from '@reduxjs/toolkit';\r\nimport contactsReducer from './contacts/contactsReducer';\r\nimport themeReducer from './theme/themeReducer';\r\n\r\nconst store = configureStore({\r\n  reducer: {\r\n    contacts: contactsReducer,\r\n    theme: themeReducer,\r\n  },\r\n});\r\n\r\nexport default store;\r\n","import shortid from 'shortid';\r\n\r\nconst nameInputId = shortid.generate();\r\nconst numberInputId = shortid.generate();\r\n\r\nexport default { nameInputId, numberInputId };\r\n","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport PropTypes from 'prop-types';\r\nimport { toast } from 'react-toastify';\r\n\r\nimport contactsActions from '../../redux/contacts/contactsActions';\r\nimport generateId from '../../utils/generateId';\r\n\r\nimport styles from './ContactForm.module.css';\r\nimport 'react-toastify/dist/ReactToastify.css';\r\n\r\nclass ContactForm extends Component {\r\n  static propTypes = {\r\n    onAddContact: PropTypes.func.isRequired,\r\n  };\r\n\r\n  state = {\r\n    name: '',\r\n    number: '',\r\n  };\r\n\r\n  handleChange = ({ target: { value, name } }) => {\r\n    this.setState({ [name]: value });\r\n  };\r\n\r\n  handleSubmit = e => {\r\n    e.preventDefault();\r\n    const { name, number } = this.state;\r\n    const { contacts } = this.props;\r\n    if (contacts.some(contact => contact.name === name)) {\r\n      toast.configure();\r\n      toast.error(name + ` is alredy in contacts`);\r\n    } else {\r\n      this.props.onAddContact(name, number);\r\n    }\r\n\r\n    this.reset();\r\n  };\r\n\r\n  reset = () => {\r\n    this.setState({ name: '', number: '' });\r\n  };\r\n\r\n  render() {\r\n    const { name, number } = this.state;\r\n    const { nameInputId, numberInputId } = generateId;\r\n\r\n    return (\r\n      <form onSubmit={this.handleSubmit} className={styles.form}>\r\n        <div>\r\n          <label className={styles.formLabel} htmlFor={nameInputId}>\r\n            Name\r\n          </label>\r\n          <input\r\n            className={styles.formInput}\r\n            type=\"text\"\r\n            value={name}\r\n            onChange={this.handleChange}\r\n            name=\"name\"\r\n            id={nameInputId}\r\n          />\r\n        </div>\r\n        <div>\r\n          <label className={styles.formLabel} htmlFor={numberInputId}>\r\n            Number\r\n          </label>\r\n          <input\r\n            className={styles.formInput}\r\n            type=\"tel\"\r\n            value={number}\r\n            onChange={this.handleChange}\r\n            name=\"number\"\r\n            id={numberInputId}\r\n          />\r\n        </div>\r\n        <button type=\"submit\" disabled={!name.length || !number.length}>\r\n          Add contact\r\n        </button>\r\n      </form>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n  const contacts = state.contacts.contacts;\r\n  return { contacts };\r\n};\r\n\r\nconst mapDispatchToProps = {\r\n  onAddContact: contactsActions.addContact,\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(ContactForm);\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { item, btn } from \"./ContactListItem.module.css\";\r\n\r\nfunction ContactListItem({ name, number, onDeleteContact }) {\r\n  return (\r\n    <div className={item}>\r\n      <p>\r\n        {name}:{number}\r\n      </p>\r\n      <button className={btn} type=\"button\" onClick={onDeleteContact}>\r\n        Delete\r\n      </button>\r\n    </div>\r\n  );\r\n}\r\n\r\nContactListItem.propTypes = {\r\n  name: PropTypes.string.isRequired,\r\n  number: PropTypes.oneOfType([PropTypes.number, PropTypes.string]),\r\n  onDeleteContact: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default ContactListItem;\r\n","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport PropTypes from 'prop-types';\r\nimport ContactListItem from '../ContactListItem/ContactListItem';\r\nimport contactsActions from '../../redux/contacts/contactsActions';\r\nimport styles from './ContactList.module.css';\r\n\r\nfunction ContactList({ contacts, onDeleteContact }) {\r\n  return (\r\n    <ul className={styles.list}>\r\n      {contacts &&\r\n        contacts.map(({ id, name, number }) => (\r\n          <li key={id}>\r\n            <ContactListItem\r\n              name={name}\r\n              number={number}\r\n              onDeleteContact={() => onDeleteContact(id)}\r\n            />\r\n          </li>\r\n        ))}\r\n    </ul>\r\n  );\r\n}\r\n\r\nContactList.propTypes = {\r\n  contacts: PropTypes.arrayOf(\r\n    PropTypes.shape({\r\n      id: PropTypes.string.isRequired,\r\n      name: PropTypes.string.isRequired,\r\n      number: PropTypes.string.isRequired,\r\n    }),\r\n  ).isRequired,\r\n  onDeleteContact: PropTypes.func.isRequired,\r\n};\r\n\r\nconst mapStateToProps = state => {\r\n  const { contacts, filter } = state.contacts;\r\n  const visibleContacts = contacts.filter(contact =>\r\n    contact.name.toLowerCase().includes(filter.toLowerCase()),\r\n  );\r\n\r\n  return {\r\n    contacts: visibleContacts,\r\n  };\r\n};\r\nconst mapDispatchToProps = {\r\n  onDeleteContact: contactsActions.deleteContact,\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(ContactList);\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { connect } from 'react-redux';\r\nimport contactsActions from '../../redux/contacts/contactsActions';\r\n\r\nconst Filter = ({ value, onChangeFilter }) => (\r\n  <div>\r\n    <p>Find contacts by name</p>\r\n    <input\r\n      type=\"text\"\r\n      value={value}\r\n      onChange={e => onChangeFilter(e.target.value)}\r\n    />\r\n  </div>\r\n);\r\n\r\nFilter.propTypes = {\r\n  value: PropTypes.string.isRequired,\r\n  onChangeFilter: PropTypes.func.isRequired,\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n  value: state.contacts.filter,\r\n});\r\n\r\nconst mapDispatchToProps = {\r\n  onChangeFilter: contactsActions.changeFilter,\r\n};\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Filter);\r\n","import React from 'react';\r\n\r\nexport const themeConfig = {\r\n  light: {\r\n    fontColor: 'black',\r\n    bodyBg: 'white',\r\n  },\r\n  dark: {\r\n    fontColor: 'white',\r\n    bodyBg: 'black',\r\n  },\r\n};\r\n\r\nconst ThemeContext = React.createContext(themeConfig.light);\r\nexport default ThemeContext;\r\n","import React from 'react';\r\nimport { connect } from 'react-redux';\r\n\r\nimport { themeConfig } from '../../context/ThemeContext';\r\nimport 'react-toastify/dist/ReactToastify.css';\r\n\r\nconst Layout = ({ children, theme }) => (\r\n  <div\r\n    style={{\r\n      background:\r\n        theme.themeConfig === 'light'\r\n          ? themeConfig.light.bodyBg\r\n          : themeConfig.dark.bodyBg,\r\n      color:\r\n        theme.themeConfig === 'light'\r\n          ? themeConfig.light.fontColor\r\n          : themeConfig.dark.fontColor,\r\n    }}\r\n  >\r\n    {children}\r\n  </div>\r\n);\r\n\r\nconst mapStateToProps = state => ({\r\n  theme: state.theme.themeConfig,\r\n});\r\n\r\nexport default connect(mapStateToProps)(Layout);\r\n","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\n\r\nimport styles from './Toggler.module.css';\r\nimport themeActions from '../../redux/theme/themeActions';\r\nimport { themeConfig } from '../../context/ThemeContext';\r\n\r\nclass Toggler extends Component {\r\n  render() {\r\n    const { theme, toggleTheme, isChecked } = this.props;\r\n    return (\r\n      <div\r\n        style={{\r\n          background:\r\n            theme.themeConfig === 'light'\r\n              ? themeConfig.light.bodyBg\r\n              : themeConfig.dark.bodyBg,\r\n        }}\r\n        className={styles.themeSelector}\r\n      >\r\n        <span className={styles.label}></span>\r\n        <label className={styles.switch}>\r\n          <input\r\n            type=\"checkbox\"\r\n            checked={isChecked.isChecked}\r\n            onChange={toggleTheme}\r\n          />\r\n          <span className={styles.slider}></span>\r\n        </label>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n  isChecked: state.theme.isChecked,\r\n  contacts: state.contacts.contacts,\r\n  theme: state.theme.themeConfig,\r\n});\r\n\r\nconst mapDispatchToProps = {\r\n  toggleTheme: themeActions.toggleTheme,\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Toggler);\r\n","import React from 'react';\nimport { connect } from 'react-redux';\n\nimport ContactForm from './components/ContactForm/ContactForm';\nimport ContactList from './components/ContactList/ContactList';\nimport Filter from './components/Filter/Filter';\nimport Layout from './components/Layout/Layout';\nimport Toggler from './components/Toggler/Toggler';\n\nimport 'react-toastify/dist/ReactToastify.css';\n\nconst App = ({ contacts }) => {\n  return (\n    <Layout>\n      <Toggler />\n      <h1>Phonebook</h1>\n      <ContactForm />\n      <h2>Contacts</h2>\n      {contacts.length > 2 && <Filter />}\n      <ContactList />\n    </Layout>\n  );\n};\n\nconst mapStateToProps = state => ({\n  contacts: state.contacts.contacts,\n});\n\nexport default connect(mapStateToProps)(App);\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport store from './redux/store';\nimport App from './App';\nimport './index.css';\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById('root'),\n);\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"ContactForm_form__1tyEJ\",\"formLabel\":\"ContactForm_formLabel__2sT7M\",\"formInput\":\"ContactForm_formInput__2VjGf\"};"],"sourceRoot":""}